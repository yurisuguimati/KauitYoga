@model KaiutYoga.Models.PaymentModel

@{
    ViewBag.Title = "Cadastro de pagamento";
}

<h2>Pagamentos</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Cadastro</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.StudentId, "Aluno", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StudentId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PlanId, "Plano de aulas", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PlanId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PlanId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PeriodStart, "De", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PeriodStart, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PeriodStart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PeriodEnd, "Até", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PeriodEnd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PeriodEnd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AmountToPay, "Mensalidade", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AmountToPay, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.AmountToPay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notified, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Notified)
                    @Html.ValidationMessageFor(model => model.Notified, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AmountPaid, "Pago", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    <input type="checkbox" id="Paid" class="check-box" />
                    @Html.ValidationMessageFor(model => model.Notified, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div id="PaidFields">
            <div class="form-group">
                @Html.LabelFor(model => model.DatePaid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DatePaid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DatePaid, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AmountPaid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AmountPaid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AmountPaid, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Cadastrar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        if (!$("#Paid").is(':checked')) {
            $("#PaidFields").hide();
        }
    })

    $("#Paid").change(function () {
        if (this.checked) {
            today = new Date();
            day = today.getDate();
            if (day < 10)
                day = "0" + day;
            month = today.getMonth() + 1;
            if (month < 10)
                month = "0" + month;

            today = today.getFullYear() + "-" + month + "-" + day

            $("#DatePaid").val(today);
            $("#AmountPaid").val();
            
            $("#PaidFields").show();
        }
        else {
            $("#PaidFields").hide();
            $("#DatePaid").val("");
            $("#AmountPaid").val("");
        }
    })


    $("#PlanId").change(function () {
        UpdateAmountToPay();
    })

    $("#PeriodStart").change(function () {
        UpdateAmountToPay();
    })

    $("#PeriodEnd").change(function () {
        UpdateAmountToPay();
    })

    $("#DueDate").change(function () {
        UpdateAmountToPay();
    })

    function UpdateAmountToPay() {
        $.ajax({
            type: 'get',
            url: "/Payment/GetAmountToPay",
            dataType: "html",
            data: "from=" + $("#PeriodStart").val() + "&to=" + $("#PeriodEnd").val() + "&due=" + $("#DueDate").val()+"&planId="+$("#PlanId").val(),
            contentType: "application/x-www-form-urlencoded;charset=utf-8",
            async: false,
            success: function (result) {
                $("#AmountToPay").val(result);
            },
            error: function (e) {
                tooltip = e;
            }
        });
    }
</script>

<div>
    @Html.ActionLink("Voltar a lista de pagamentos", "Index")
</div>
